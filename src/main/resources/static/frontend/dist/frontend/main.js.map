{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./services/image-upload.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/faq/faq.component.ts","./src/app/faq/faq.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/uploader/uploader-file-drop-entry.ts","./src/app/uploader/uploader-file-drop-status.ts","./src/app/uploader/uploader.component.ts","./src/app/uploader/uploader.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { HttpEvent, HttpClient, HttpRequest} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ImageUploadResponse } from './payloads/image-upload-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ImageUploadService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    public uploadImage(formData: FormData): Observable<HttpEvent<any>> {\n        const request = new HttpRequest('POST', '/image/upload', formData, {\n            reportProgress: true\n        });\n\n        return this.httpClient.request(request);\n    }\n\n    public getCompressedImageUri(uploadedImage: ImageUploadResponse): string {\n        return '/image/' + uploadedImage.finalName;\n    }\n\n    public downloadCompressedImage(uploadedImage: ImageUploadResponse) {\n        let url = this.getCompressedImageUri(uploadedImage);\n        return this.httpClient.get(url, {responseType: 'blob', observe: 'response'});\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UploaderComponent } from './uploader/uploader.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {path: '', component: UploaderComponent},\n  {path: 'faq', component: FaqComponent},\n  {path: 'about', component: AboutComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'SquishImg';\n}\n","<app-navbar ></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxFileDropModule } from 'ngx-file-drop';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { UploaderComponent } from './uploader/uploader.component';\nimport { AboutComponent } from './about/about.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClipboardModule } from 'ngx-clipboard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    UploaderComponent,\n    AboutComponent,\n    FaqComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxFileDropModule,\n    HttpClientModule,\n    ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>faq works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <p>Bootstrap theme made by <a href=\"https://thomaspark.co/\">Thomas Park</a>.</p>\n            <p>Code released under the <a href=\"https://github.com/thomaspark/bootswatch/blob/master/LICENSE\">MIT License</a>.</p>\n            <p>Based on <a href=\"https://getbootstrap.com/\" rel=\"nofollow\">Bootstrap</a>. Icons from <a href=\"https://fontawesome.com/\" rel=\"nofollow\">Font Awesome</a>. Web fonts from <a href=\"https://fonts.google.com/\" rel=\"nofollow\">Google</a>.</p>\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\n    <div class=\"container\">\n        <a href=\"../\" class=\"navbar-brand\">SquishImg</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">Home</a></li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/faq\" routerLinkActive=\"active\">FAQ</a></li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/about\" routerLinkActive=\"active\">About</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n","import { NgxFileDropEntry } from 'ngx-file-drop';\nimport { ImageUploadResponse } from 'services/payloads/image-upload-response';\nimport { UploaderFileDropStatus } from './uploader-file-drop-status';\n\nexport class UploaderFileDropEntry extends NgxFileDropEntry {\n\n    status: UploaderFileDropStatus;\n    uploadResponse?: ImageUploadResponse;\n\n    constructor(fileDropEntry: NgxFileDropEntry) {\n        super(fileDropEntry.relativePath, fileDropEntry.fileEntry);\n        this.status = new UploaderFileDropStatus();\n    }\n}\n","export class UploaderFileDropStatus {\n    static readonly STATUS_PENDING = 0;\n    static readonly STATUS_SUCCESS = 1;\n    static readonly STATUS_FAILED = 2;\n    static readonly STATUS_IS_DIRECTORY = 3;\n    static readonly STATUS_RESPONSE_RECEIVED = 4;\n\n    private statusCode: number;\n    private message: String;\n    private level: String;\n    \n    progress: number = 0;\n\n    constructor() {\n        this.statusCode = UploaderFileDropStatus.STATUS_PENDING;\n        this.message = '';\n        this.level = '';\n        this.setStatusCode(UploaderFileDropStatus.STATUS_PENDING);\n    }\n\n    public getLevel(): String {\n        return this.level;\n    }\n\n    public getMessage(): String {\n        return this.message;\n    }\n\n    public setStatusCode(statusCode: number) {\n        this.statusCode = statusCode;\n        switch(statusCode) {\n            case UploaderFileDropStatus.STATUS_PENDING:\n                this.message = 'uploading';\n                this.level = 'info';\n                break;\n            case UploaderFileDropStatus.STATUS_SUCCESS:\n                this.message = 'upload complete';\n                this.level = 'secondary';\n                break;\n            case UploaderFileDropStatus.STATUS_IS_DIRECTORY:\n                this.message = 'you cannot upload a directory';\n                this.level = 'danger';\n                break;\n            case UploaderFileDropStatus.STATUS_FAILED:\n                this.message = 'upload/compression failed';\n                this.level = 'danger';\n                break;\n            case UploaderFileDropStatus.STATUS_RESPONSE_RECEIVED:\n                this.message = 'compression complete';\n                this.level = 'success';\n                break;\n            default:\n                throw new Error('unknown status code');\n        }\n    }\n}\n","import { HttpEvent, HttpEventType, HttpClient, HttpRequest, HttpProgressEvent, HttpResponse} from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\nimport { ImageUploadService } from 'services/image-upload.service';\nimport { ImageUploadResponse } from 'services/payloads/image-upload-response';\nimport { UploaderFileDropEntry } from './uploader-file-drop-entry';\nimport { UploaderFileDropStatus } from './uploader-file-drop-status';\nimport { saveAs } from 'file-saver';\n\n@Component({\n    selector: 'app-uploader',\n    templateUrl: './uploader.component.html',\n    styleUrls: ['./uploader.component.css']\n})\n\nexport class UploaderComponent implements OnInit {\n\n    public files: UploaderFileDropEntry[];\n\n    constructor(\n        private uploadService: ImageUploadService,\n        private clipboardService: ClipboardService) { \n        this.files = [];\n    }\n\n    ngOnInit(): void { }\n\n    public compressedImageUrlToClipboard(uploadedImage: ImageUploadResponse): void {\n        const uri = this.uploadService.getCompressedImageUri(uploadedImage);\n        const url = window.location.protocol + '//' + window.location.host + uri;\n        console.log(url);\n        this.clipboardService.copy(url);\n    }\n\n    public downloadCompressedImage(uploadedImage: ImageUploadResponse) {\n        this.uploadService.downloadCompressedImage(uploadedImage).subscribe((result: HttpResponse<Blob>) => {\n            const body = result.body as Blob;\n            saveAs(body, uploadedImage.finalName);\n        });\n    }\n\n    public dropped(files: NgxFileDropEntry[]) {\n        const self = this;\n\n        for (const rawDroppedFile of files) {\n            const droppedFile = new UploaderFileDropEntry(rawDroppedFile);\n            self.files.push(droppedFile);\n\n            if (droppedFile.fileEntry.isFile) {\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n                fileEntry.file((file: File) => {\n                    const formData = new FormData()\n                    formData.append('image', file, droppedFile.relativePath);\n                    \n                    const req = this.uploadService.uploadImage(formData);\n                    req.subscribe((event: HttpEvent<any>) => {\n                        switch (event.type) {\n                            case HttpEventType.UploadProgress:\n                                let uploadPercent = Math.round(event.loaded / (event.total ?? 0) * 100);\n                                droppedFile.status.progress = uploadPercent;\n                                break;\n                            case HttpEventType.Response:\n                                droppedFile.uploadResponse = event.body as ImageUploadResponse;\n                                droppedFile.status.setStatusCode(UploaderFileDropStatus.STATUS_SUCCESS);\n                                break;\n                        }\n                    }, (error) => droppedFile.status.setStatusCode(UploaderFileDropStatus.STATUS_FAILED));\n                });\n            } \n            else {\n                droppedFile.status.setStatusCode(UploaderFileDropStatus.STATUS_IS_DIRECTORY);\n            }\n        }\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-12 mb-2\">\n        <img src=\"/img/banner.jpg\" class=\"rounded img-fluid\" alt=\"banner image\">\n    </div>\n\n    <div class=\"col-12 mt-2 mb-2\">\n        <div class=\"center\">\n            <ngx-file-drop \n                dropZoneLabel=\"Drop files here\"\n                dropZoneClassName=\"dropZone-style\"\n                contentClassName=\"dropZoneContent-style\"\n                (onFileDrop)=\"dropped($event)\"\n                [directory]=\"false\"\n                accept=\".png,.jpg,.jpeg,.gif\">\n                <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\n                    Drop image files here or\n                    &nbsp; &nbsp;\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"openFileSelector()\">Click to browse files</button>\n                </ng-template>\n            </ngx-file-drop>\n            <p class=\"text-center mt-1 mb-2\">allowed extensions: png, jpg, jpeg, gif</p>\n            <div class=\"upload-table\">\n                <table class=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th style=\"width:50%\" scope=\"col\">name</th>\n                            <th style=\"width:20%\" scope=\"col\">status</th>\n                            <th style=\"width:20%\" scope=\"col\">progress</th>\n                            <th style=\"width:10%\" scope=\"col\">action</th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"upload-name-style\">\n                        <tr *ngFor=\"let item of files; let i = index\">\n                            <td><strong>{{ item.relativePath }}</strong></td>\n                            <td><p class=\"text-{{ item.status.getLevel() }}\">\n                                {{ item.status.getMessage() }}</p></td>\n                            <td>\n                                <div class=\"progress mb-0\" style=\"height:20px;\">\n                                    <div \n                                        class=\"progress-bar\" \n                                        role=\"progressbar\" \n                                        [style.width]=\"item.status.progress + '%'\"\n                                        [attr.aria-valuenow]=\"item.status.progress\" \n                                        aria-valuemin=\"0\" \n                                        aria-valuemax=\"100\"></div>\n                                </div>\n                            </td>\n                            <td>\n                                <div *ngIf=\"item.uploadResponse\" class=\"btn-group\" role=\"group\" aria-label=\"Actions\">\n                                    <button \n                                        title=\"download compressed image\"\n                                        (click)=\"downloadCompressedImage(item.uploadResponse)\"\n                                        type=\"button\" \n                                        class=\"btn btn-sm btn-primary\">\n                                        <i class=\"fa fa-arrow-down\"></i></button>\n                                    <button \n                                        title=\"copy to clipboard\" \n                                        (click)=\"compressedImageUrlToClipboard(item.uploadResponse)\"\n                                        type=\"button\" \n                                        class=\"btn btn-sm btn-secondary\">\n                                        <i class=\"fa fa-clipboard\"></i></button>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}